@{
    ViewData["Title"] = "Home";
}

<h1>🎉 Simple IIS App is Running! 🎉</h1>

<div class="status">
    ✅ Congratulations! Your ASP.NET Core application is successfully deployed on IIS.
</div>

<div class="deployment-info" style="background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 15px; border-radius: 10px; margin: 15px 0; text-align: center;">
    <h3 style="margin: 0 0 10px 0;">🚀 Deployment Information</h3>
    <p style="margin: 5px 0;">
        <strong>Version:</strong> @Environment.GetEnvironmentVariable("DD_DEPLOYMENT_VERSION") | 
        <strong>Deployed:</strong> @Environment.GetEnvironmentVariable("DD_DEPLOYMENT_TIME")
    </p>
    <p style="margin: 5px 0; font-size: 0.9em; opacity: 0.8;">
        <strong>Git:</strong> @Environment.GetEnvironmentVariable("DD_GIT_BRANCH")
    </p>
</div>

@if (ViewBag.IsAuthenticated)
{
    <div class="status" style="background: rgba(76, 175, 80, 0.3); border: 1px solid rgba(76, 175, 80, 0.5); margin-top: 15px;">
        👤 Welcome back! You are logged in. <a asp-action="Dashboard" style="color: #FFE066; text-decoration: underline;">Go to Dashboard</a>
    </div>
}
else
{
    <div class="status" style="background: rgba(255, 193, 7, 0.3); border: 1px solid rgba(255, 193, 7, 0.5); margin-top: 15px;">
        🔐 Want to see admin features? <a asp-controller="Account" asp-action="Login" style="color: #FFE066; text-decoration: underline;">Login here</a> (admin/password)
    </div>
}

<div class="info-grid">
    <div class="info-card">
        <h3>🕒 Server Time</h3>
        <p>@ViewBag.ServerTime</p>
    </div>
    
    <div class="info-card">
        <h3>💻 Machine Name</h3>
        <p>@ViewBag.MachineName</p>
    </div>
    
    <div class="info-card">
        <h3>👤 User Context</h3>
        <p>@ViewBag.UserName</p>
    </div>
    
    <div class="info-card">
        <h3>🖥️ Operating System</h3>
        <p>@ViewBag.OSVersion</p>
    </div>
    
    <div class="info-card">
        <h3>⚡ .NET Version</h3>
        <p>@ViewBag.DotNetVersion</p>
    </div>
    
    <div class="info-card">
        <h3>🌐 Environment</h3>
        <p>@Html.Raw(System.Environment.GetEnvironmentVariable("ASPNETCORE_ENVIRONMENT") ?? "Production")</p>
    </div>

    <div class="info-card">
        <h3>🔐 Authentication</h3>
        <p>@(ViewBag.IsAuthenticated ? "✅ Logged In" : "❌ Anonymous")</p>
    </div>
    
    <div class="info-card" style="background: linear-gradient(135deg, #ff6b6b 0%, #ee5a24 100%); color: white;">
        <h3>⚠️ Error Testing for Datadog</h3>
        <p>Test error monitoring and alerting:</p>
        <div style="display: flex; flex-wrap: wrap; gap: 10px; margin: 15px 0;">
            <button onclick="triggerError('nullreference')" class="error-btn">Null Reference</button>
            <button onclick="triggerError('dividebyzero')" class="error-btn">Divide by Zero</button>
            <button onclick="triggerError('outofrange')" class="error-btn">Out of Range</button>
            <button onclick="triggerError('aggregate')" class="error-btn">Aggregate Error</button>
        </div>
        <p><a href="/Home/ErrorTesting" style="color: #fff; text-decoration: underline;">🧪 Full Error Testing Page</a></p>
        <p><a href="/test-working" target="_blank" style="color: #fff; text-decoration: underline;">✅ Test Working</a> (verify routing works)</p>
        <p><a href="/test-exception" target="_blank" style="color: #fff; text-decoration: underline;">🔥 Test Exception</a> (simple GET exception)</p>
        <p><a href="/api/simple-error-test" target="_blank" style="color: #fff; text-decoration: underline;">🔍 Simple Debug Test</a> (basic exception test)</p>
        <p><em style="font-size: 0.9em;">These trigger real exceptions for Datadog monitoring testing</em></p>
    </div>
</div>

<style>
    .error-btn {
        background: #fff;
        color: #ee5a24;
        border: 2px solid #fff;
        padding: 8px 12px;
        border-radius: 5px;
        cursor: pointer;
        font-weight: bold;
        transition: all 0.3s ease;
    }
    .error-btn:hover {
        background: #ee5a24;
        color: #fff;
        transform: translateY(-2px);
    }
</style>

<script>
function triggerError(errorType) {
    const confirmed = confirm(`⚠️ This will trigger a real ${errorType} error for Datadog testing. Continue?`);
    if (!confirmed) return;
    
    console.log(`🚨 Triggering ${errorType} error for Datadog testing...`);
    
    fetch('/api/trigger-error', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/x-www-form-urlencoded',
        },
        body: `errorType=${errorType}`
    })
    .then(response => {
        if (!response.ok) {
            // This is expected! Error was successfully triggered
            console.log(`✅ Error successfully triggered: ${response.status} ${response.statusText}`);
            alert(`✅ Error triggered successfully!\nStatus: ${response.status} ${response.statusText}\n\nCheck Datadog for error logs and alerts.`);
        } else {
            // This shouldn't happen - error should have been thrown
            console.warn(`⚠️ Error may not have triggered properly: ${response.status}`);
            alert(`⚠️ Error may not have triggered properly!\nStatus: ${response.status} (Expected 500)\n\nPlease check the server logs.`);
        }
        return response.text();
    })
    .catch(error => {
        // Network errors or parsing errors - this could also indicate success
        console.log('✅ Error likely triggered successfully (network error):', error);
        alert(`✅ Error likely triggered successfully!\nNetwork Error: ${error.message}\n\nThis often indicates the error was thrown successfully.\n\nCheck Datadog for error logs and alerts.`);
    });
}
</script>

<div class="info-card" style="margin-top: 30px;">
    <h3>📊 Monitoring Endpoints</h3>
    <p>✅ Health Check: <a href="/health" target="_blank" style="color: #FFE066;">/health</a></p>
    <p>✅ API Health: <a href="/api/healthcheck" target="_blank" style="color: #FFE066;">/api/healthcheck</a></p>
    <p>✅ Metrics: <a href="/api/metrics" target="_blank" style="color: #FFE066;">/api/metrics</a></p>
    <p>✅ Git Info: <a href="/api/git-info" target="_blank" style="color: #FFE066;">/api/git-info</a></p>
    <p style="margin-top: 10px; font-size: 0.9em; opacity: 0.8;">
        🔄 Auto-healthcheck runs every 30 seconds for monitoring tools like Datadog
    </p>
</div>

<div style="text-align: center; margin-top: 30px; opacity: 0.8;">
    <p>This is a simple test application to verify IIS deployment is working correctly.</p>
    <p>Now includes authentication and monitoring endpoints for observability testing!</p>
</div>
